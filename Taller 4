import random
import time


def datos(x):
    
    for i in range(x):
        numero_aleatorio = random.randint(1, 100)
        lista.append(numero_aleatorio)
        



def burbuja(lista,data_burbuja):

    inicio = time.time()
        
    for i in range(0, len(lista) - 1):
        for j in range(0, len(lista) - i - 1):
            if lista[j] > lista[j + 1]:
                aux = lista[j]
                lista[j] = lista[j + 1]
                lista[j + 1] = aux

            #print("Burbuja i[", i, "]-j[", j, "]: vector : ", lista)
    final = time.time()
    duracion = final - inicio    
    data_burbuja.append(duracion)
def burbujaMejorada(lista,data_burbuja_mejorada):
    inicio = time.time()
    i = 0
    control = True
    while (i <= len(lista) - 2) and control:
        control = False
        for j in range(0, len(lista) - i - 1):
            if lista[j] > lista[j + 1]:
                aux = lista[j]
                lista[j] = lista[j + 1]
                lista[j + 1] = aux
                control = True
            #print("Burbuja Mejorada i[", i, "]-j[", j, "]: vector : ", lista)
        i = i + 1
    final = time.time()
    duracion = final - inicio    
    data_burbuja_mejorada.append(duracion)


def burbujaBidireccional(lista,data_burbuja_bidireccional):
    inicio = time.time()
    izquierda = 0
    derecha = len(lista) - 1
    control = True
    while (izquierda < derecha) and control:
        control = False
        for i in range(izquierda, derecha):
            if lista[i] > lista[i + 1]:
                aux = lista[i]
                lista[i] = lista[i + 1]
                lista[i + 1] = aux
                control = True
            #print(
            #    "Burbuja Bidireccional f1 izq[",
            #    i,
            #    "]-der[",
            #    derecha,
            #    "]: vector : ",
            #    lista,
            #)
        derecha -= 1
        for j in range(derecha, izquierda, -1):
            if lista[j] < lista[j - 1]:
                aux = lista[j]
                lista[j] = lista[j - 1]
                lista[i - 1] = aux
                control = True
            #print("Burbuja Bidireccional f2 izq[",izquierda,"]-der[",j,"]: vector : ",lista,)
        izquierda += 1
    final = time.time()
    duracion = final - inicio    
    data_burbuja_bidireccional.append(duracion)    

def seleccion(lista,data_seleccion):
    inicio = time.time()
    for i in range(0, len(lista) - 1):
        minimo = i
        for j in range(i + 1, len(lista)):
            if lista[j] < lista[minimo]:
                minimo = j
            #print("Seleccion i[",i,"]-j[",j,"] - minimo(",minimo,"): vector : ",lista,)
        aux = lista[i]
        lista[i] = lista[minimo]
        lista[minimo] = aux
    final = time.time()
    duracion = final - inicio    
    data_seleccion.append(duracion)   


def insercion(lista,data_insercion):
    inicio=time.time()
    for i in range(1, len(lista) + 1):
        k = i - 1
        while (k > 0) and lista[k] < lista[k - 1]:
            aux = lista[k]
            lista[k] = lista[k - 1]
            lista[k - 1] = aux
            #print("Insercion i[", i, "]-k[", k, "]: vector : ", lista)
            k -= 1
    final = time.time()
    duracion = final - inicio    
    data_insercion.append(duracion)   


def ordenamientoRapido(lista, primero, ultimo,data_fast_ordenamiento):
    #print("quickSort:", lista)
    inicio=time.time()
    izquierda = primero
    derecha = ultimo - 1
    pivote = ultimo
    while izquierda < derecha:
        while lista[izquierda] < lista[pivote] and izquierda <= derecha:
            izquierda += 1
        while lista[derecha] > lista[pivote] and derecha >= izquierda:
            derecha -= 1
        if izquierda < derecha:
            aux = lista[izquierda]
            lista[izquierda] = lista[derecha]
            lista[derecha] = aux
    if lista[pivote] < lista[izquierda]:
        aux = lista[izquierda]
        lista[izquierda] = lista[pivote]
        lista[pivote] = aux
    if primero < izquierda:
        ordenamientoRapido(lista, primero, izquierda - 1)
    if ultimo > izquierda:
        ordenamientoRapido(lista, izquierda + 1, ultimo)
    final = time.time()
    duracion = final - inicio    
    data_fast_ordenamiento.append(duracion)       

def ordenamientoMezcla(lista,data_mezcla_orden):
    inicio=time.time()
    if len(lista) <= 1:
        return lista
    else:
        medio = len(lista) // 2
        izquierda = []
        for i in range(0, medio):
            izquierda.append(lista[i])
        derecha = []
        for i in range(medio, len(lista)):
            derecha.append(lista[i])
        izquierda = ordenamientoMezcla(izquierda)
        derecha = ordenamientoMezcla(derecha)
        if izquierda[medio - 1] <= derecha[0]:
            izquierda += derecha
            return izquierda
        resultado = mezcla(izquierda, derecha)
        return resultado
    final = time.time()
    duracion = final - inicio    
    data_mezcla_orden.append(duracion)       


def mezcla(izquierda, derecha,data_mezcla):
    #print("mergeSort - izq", izquierda, "der", derecha)
    inicio=time.time()
    lista_mezclada = []
    while len(izquierda)>0 and (len(derecha) > 0):
        if izquierda[0] < derecha[0]:
            lista_mezclada.append(izquierda.pop(0))
        else:
            lista_mezclada.append(derecha.pop(0))
    if len(izquierda) > 0:
        lista_mezclada += izquierda
    if len(derecha) > 0:
        lista_mezclada += derecha
    return lista_mezclada
    final = time.time()
    duracion = final - inicio    
    data_burbuja_bidireccional.append(duracion)      

#datas
data_burbuja=[]
data_burbuja_mejorada=[]
data_burbuja_bidireccional=[]
data_insercion=[]
data_mezcla_orden=[]
data_fast_ordenamiento=[]
data_seleccion=[]
data_mezcla= []
#muestreo
j=0
x=10
while j<4:
    i=0
    print("Este es la ejecucion burbuja ", j)
    while i<10:
        lista = []
        datos(x)
        insercion(lista,data_insercion)
        i=i+1
    print("dsasda",x)
    x=x*10
    j=j+1
j=0
x=10
while j<4:
    i=0
    print("Este es la ejecucion burbuja mejorada ", j)
    while i<10:
        lista = []
        datos(x)
        burbujaMejorada(lista,data_burbuja_mejorada)
        i=i+1
    print("dsasda",x)
    x=x*10
    j=j+1
j=0
x=10
while j<4:
    i=0
    print("Este es la ejecucion burbuja bidireccional ", j)
    while i<10:
        lista = []
        datos(x)
        burbujaBidireccional(lista,data_burbuja_bidireccional)
        i=i+1
    print("dsasda",x)
    x=x*10
    j=j+1
j=0
x=10
while j<4:
    i=0
    print("Este es la ejecucion burbuja seleccion ", j)
    while i<10:
        lista = []
        datos(x)
        seleccion(lista,data_seleccion)
        i=i+1
    print("dsasda",x)
    x=x*10
    j=j+1

while j<4:
    i=0
    print("Este es la ejecucion mezcla ", j)
    while i<10:
        lista = []
        datos(x)
        mezcla(lista,data_mezcla)
        i=i+1
    print("dsasda",x)
    x=x*10
    j=j+1


print("data burbuja: ",data_burbuja," databubuja mejor:", data_burbuja_mejorada, "data bubuja bi :",data_burbuja_bidireccional," data  insecion", data_insercion," data mecla orden :",data_mezcla_orden," data orden mecla: ",data_mezcla, "data fast  :",data_fast_ordenamiento," data seleccion :",data_seleccion)

